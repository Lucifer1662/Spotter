{"version":3,"sources":["functions/removeUndefined/removeUndefined.tsx","reducers/UniversalReducer.tsx","reducers/store.tsx","reducers/onChange.tsx","reducers/useUniversalState.tsx","VideoWithArmature.tsx","WebCameCapture.tsx","estimatePoseOnImage.js","pose.tsx","WebCamPose.tsx","CreateRep.tsx","Header.tsx","predictPose.ts","PoseCounter.tsx","getModels.ts","DropDown/DropDownBox.tsx","CountReps.tsx","trainRepRecognition.ts","ExistingModelDrowDown.tsx","TrainModel.tsx","DownloadLocalModels.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["removeUndefined","obj","Array","isArray","filter","item","undefined","Object","keys","forEach","key","changeState","state","parents","data","merge","parent","shift","value","_","isFunction","console","log","Number","isInteger","newList","store","createStore","combineReducers","universalReducer","action","type","search","payload","window","__REDUX_DEVTOOLS_EXTENSION__","onChange","name","newParents","longName","reduce","l","r","dispatch","useUniversalState","init","change","useSelector","getState","JSON","stringify","initString","useEffect","lodash","cloneDeep","VideoWithArmature","pose","props","canvasRef","useRef","canvas","current","context","getContext","animationFrameId","render","ctx","frameCount","clearRect","width","height","fillStyle","keypoints","keypoint","beginPath","arc","position","x","y","Math","PI","fill","draw","requestAnimationFrame","cancelAnimationFrame","ref","videoConstraints","facingMode","WebcamCapture","setVideo","webcamRef","React","useCallback","video","onloadedmetadata","style","display","audio","screenshotFormat","net","posenet","require","load","a","test","image","estimateSinglePose","flipHorizontal","decodingMethod","score","WebCamePose","p","useState","setPose","estimatePoseOnImage","left","right","StatesEnum","CreateRep","startPoses","endPoses","stage","NotStarted","time","frequency","setState","timer","setTimeout","clearTimeout","Init1Pose","Creating1Pose","length","Init2Pose","Creating2Pose","Finished","margin","TextField","label","variant","e","target","Button","onClick","alert","Typography","floor","file","content","Header","history","useHistory","AppBar","Toolbar","flex","flexDirection","justifyContent","color","marginLeft","marginRight","push","repnet","loadModel","model","clearRepnet","dispose","fromPoseToArray","map","concat","fromPoseToTensor","tf","predict","poseTensor","prediction","result","bufferSync","get","PoseCounter","poseId","count","pid","c","publicModelNames","getModels","getPublicModels","publicModels","getLocalModels","localModels","getLocalModelNames","modelNames","i","localStorage","startsWith","substr","slashi","some","v","s","names","Promise","all","process","DropDownBox","title","defaultValue","values","firstTitle","setValue","menuItems","option","MenuItem","FormControl","minWidth","InputLabel","id","Select","find","CountReps","models","setModels","setCount","then","modelOptions","trainModelFromStorage","states","progress","inputSize","outputSize","layers","dense","inputShape","units","activation","train","save","compile","optimizer","sgd","loss","meanSquaredError","toData","poses","toLabel","num","labels","datas","labelss","index","dataD","b","labelsD","fit","epochs","batchSize","info","ExistingModelDropDown","TrainModel","posess","existingModel","existingModelSelect","infos","setInfos","trainProgress","prevInfos","newName","background","existingModelDropDown","FormControlLabel","control","Checkbox","checked","accept","files","reader","FileReader","onload","event","parse","readAsText","fromLocal","top","bottom","dataKey","stroke","DownloadLocalModels","download","theme","createMuiTheme","palette","App","ThemeProvider","CssBaseline","basename","path","Box","my","className","exact","to","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.00131a9a.chunk.js","sourcesContent":["\r\n\r\n\r\nexport default function removeUndefined(obj: any) {\r\n    if (Array.isArray(obj)) {\r\n        obj = obj.filter((item) => item !== undefined);\r\n    } else if (typeof obj === 'object') {\r\n        obj = { ...obj }\r\n        Object.keys(obj).forEach(key => {if(obj[key] === undefined)  delete obj[key] });\r\n    }\r\n    return obj;\r\n}","import Action from './Action'\r\nimport _ from 'underscore';\r\nimport removeUndefined from '../functions/removeUndefined/removeUndefined';\r\n\r\n\r\nexport default function universalReducer(\r\n    state: any = {},\r\n    action: Action): any {\r\n  \r\n    if(action.type.search(\"Change\") !== -1){\r\n            let data = action.payload.data;\r\n            let parents = action.payload.parents;\r\n            let merge = action.payload.merge;\r\n            return changeState(state, parents, data, merge)\r\n    } \r\n    return state;\r\n}\r\n\r\n\r\nfunction changeState(state: any, parents: any[], data: any, merge: boolean): any {\r\n    let parent = parents.shift();\r\n    if (parent === undefined) {\r\n        if (data){\r\n            Object.keys(data).forEach((key: string) => {\r\n                let value = data[key];\r\n                if (_.isFunction(value)) {\r\n                    console.log(state[key])\r\n                    data[key] = value(state[key]);\r\n                }\r\n            })\r\n        }\r\n        if(_.isFunction(data)){\r\n            data = data(state)\r\n        }\r\n\r\n\r\n        if (merge) {\r\n            if (typeof state === 'object' && typeof data === 'object') {\r\n                if (Array.isArray(data))\r\n                    return removeUndefined(Array.isArray(state) ? [...state, ...data] : [...data])\r\n                else{\r\n                    return removeUndefined({ ...state, ...data })\r\n                }\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n        else if (data){\r\n            return data;\r\n        }\r\n        return data\r\n    }\r\n\r\n    if (Number.isInteger(parent)) {\r\n        var newList = Array.isArray(state) ? [...state] : []\r\n        //@ts-ignore\r\n        newList[parent] = changeState(newList[parent], parents, data, merge)\r\n        return removeUndefined(newList);\r\n    }\r\n    else {\r\n        if (state !== undefined) {\r\n            if(parent in state){\r\n                return removeUndefined({ ...state, [parent]: changeState(state[parent], parents, data, merge) })\r\n            }else{\r\n                return removeUndefined({ ...state, [parent]: changeState({}, parents, data, merge) })\r\n            }\r\n        } else {\r\n            return removeUndefined({ [parent]: changeState({}, parents, data, merge) })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import {createStore, combineReducers} from  'redux'\r\nimport universalReducer from \"./UniversalReducer\";\r\n\r\n let store = createStore(\r\n    combineReducers({universalReducer }),   /* preloadedState, */\r\n    //@ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nexport default store;","import store from './store'\r\n\r\n\r\nconst onChange = (name: string, parents: string[]) => (data: any, merge: boolean = true) => {\r\n    var newParents = [...parents, name];\r\n    var longName = newParents.reduce((l,r)=>l+r);\r\n    store.dispatch({type:'Change ' + longName, payload:{parents: newParents, data, merge}})\r\n}\r\n\r\nexport default onChange;","import { useSelector } from 'react-redux';\r\nimport onChange from './onChange';\r\nimport { useEffect } from 'react';\r\nimport lodash from 'lodash';\r\n\r\nfunction getState(state: any, parents: string[]) : any{\r\n    let parent = parents.shift();\r\n\r\n    //if my parent is null\r\n    if(parent === undefined)\r\n        return state\r\n    \r\n    if(parent in state && state[parent]){\r\n        return getState(state[parent], parents);\r\n    }\r\n    return undefined\r\n}\r\n\r\n\r\nexport default function useUniversalState<T = any>(name: any, parents: string[], init?: T) : [T, any]{\r\n    let change = onChange(name, parents);\r\n    //@ts-ignore\r\n    let state = useSelector(state => getState(state.universalReducer, [...parents, name]),\r\n    (l:any, r:any)=>{\r\n         return JSON.stringify(l)===JSON.stringify(r)}\r\n    );\r\n\r\n    let initString = JSON.stringify(init);\r\n    useEffect(() => {\r\n        if(init !== undefined && state === undefined)\r\n            change(init, false)\r\n    //i am using init as a string, but type script thinks i am not including init\r\n    //used it as a string as files change everytime and infinite loop occurs\r\n    //ptrs change but values are still the same\r\n    // eslint-disable-next-line\r\n    }, [initString])\r\n\r\n    //before the init state is updated from hook, just pass back init data\r\n    //as user is expecting it to be init from the start\r\n    \r\n    if(state===undefined && init !== undefined){\r\n        return [ lodash.cloneDeep(init), change]\r\n    }\r\n    if(state === undefined)\r\n        state={}\r\n\r\n    return [ lodash.cloneDeep(state), change];\r\n}","import React, { useRef, useEffect } from 'react';\r\nimport { Pose } from '@tensorflow-models/posenet';\r\n\r\ninterface Props {\r\n    pose?: Pose,\r\n    [propName: string]: any;\r\n}\r\n\r\nfunction draw(ctx: any, frameCount: number, pose?: Pose){\r\n\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    ctx.fillStyle = '#000000'\r\n    if (pose && pose.keypoints) {\r\n        pose.keypoints.forEach(keypoint => {\r\n                ctx.beginPath()\r\n                ctx.arc(keypoint.position.x, keypoint.position.y, 5, 0, 2 * Math.PI)\r\n                ctx.fill()\r\n        })\r\n\r\n    }        \r\n}\r\n\r\nexport default function VideoWithArmature({ pose, ...props }: Props) {\r\n    const canvasRef = useRef(null)\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n\r\n       \r\n\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            //@ts-ignore\r\n            const context = canvas.getContext('2d')\r\n            let frameCount = 0\r\n            let animationFrameId: any = undefined;\r\n\r\n            //Our draw came here\r\n            const render = () => {\r\n                frameCount++\r\n                draw(context, frameCount, pose)\r\n                animationFrameId = window.requestAnimationFrame(render)\r\n            }\r\n            render()\r\n\r\n            return () => {\r\n                window.cancelAnimationFrame(animationFrameId)\r\n            }\r\n        }\r\n    }, [pose])\r\n\r\n    return <canvas ref={canvasRef} {...props} />\r\n}","import React from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport useUniversalState from './reducers/useUniversalState';\r\n\r\nconst videoConstraints = {\r\n    facingMode: \"user\",\r\n    width: 600,\r\n    height: 500\r\n};\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport default function WebcamCapture({ parents=[] }: Props) {\r\n    let s = useUniversalState(\"WebCamCapture\", parents);\r\n    var setVideo = s[1];\r\n\r\n     const webcamRef = React.useCallback(\r\n        (current) => {            \r\n            if (current) {\r\n                //@ts-ignore\r\n                var video = current.video\r\n                video.onloadedmetadata = () => {\r\n                    setVideo({video})\r\n                };\r\n            }else{\r\n                setVideo(undefined)\r\n            }\r\n        },\r\n        // eslint-disable-next-line\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div style={{ position: 'relative', display: 'unset' }}>\r\n            <Webcam\r\n                audio={false}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={600}\r\n                height={500}\r\n                videoConstraints={videoConstraints}\r\n            />\r\n        </div>\r\n    );\r\n};","const posenet = require('@tensorflow-models/posenet');\r\n\r\n\r\nvar net;\r\nasync function load() {\r\n    net = await posenet.load();\r\n}\r\n\r\n\r\n\r\n\r\nexport default async function test(image) {\r\n    // load the posenet model from a checkpoint\r\n    if (!net) {\r\n        await load()\r\n\r\n    }\r\n\r\n    const pose = await net.estimateSinglePose(image, {\r\n        flipHorizontal: false,\r\n        decodingMethod: 'single-person'\r\n    });\r\n\r\n    return pose;\r\n}","import { Pose } from \"@tensorflow-models/posenet\";\r\n\r\n\r\nvar pose : Pose = {score:0, keypoints: []};\r\nexport const setPose = (p:Pose)=>{\r\n    pose.score = p.score;\r\n    pose.keypoints = [...p.keypoints]\r\n};\r\n\r\n\r\n\r\n\r\nexport default pose;","import React, { useEffect, useState } from 'react';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport { Pose } from '@tensorflow-models/posenet';\r\nimport VideoWithArmature from './VideoWithArmature';\r\nimport WebcamCapture from './WebCameCapture';\r\nimport estimatePoseOnImage from './estimatePoseOnImage'\r\nimport { setPose as setPoseGlobal } from './pose';\r\n\r\ninterface Props {\r\n  parents?: any[]\r\n}\r\n\r\nexport default function WebCamePose({ parents = [] }: Props) {\r\n\r\n  let [{ video }] = useUniversalState(\"WebCamCapture\", parents);\r\n  let [pose, setPose] = useState<Pose | undefined>();\r\n\r\n  if (pose) {\r\n    setPoseGlobal(pose);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const render = async () => {\r\n      if (video) {\r\n        // console.log(parents, video)\r\n        setPose(await estimatePoseOnImage(video));\r\n\r\n        // if(video)\r\n        window.requestAnimationFrame(render);\r\n      }\r\n\r\n    }\r\n\r\n    //if(video)\r\n    render()\r\n  }, [video])\r\n\r\n  return <div style={{ position: 'relative' }}>\r\n    <WebcamCapture parents={parents} />\r\n    <VideoWithArmature pose={pose} width={video ?.width} height={video ?.height} style={{ position: 'absolute', left: 0, right: 0, width: video ?.width, height: video ?.height }} />\r\n  </div>\r\n}","import React, { useEffect } from 'react';\r\nimport WebCamPose from './WebCamPose';\r\nimport { Button, Typography, TextField } from '@material-ui/core';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport pose from './pose';\r\n//@ts-ignore\r\nimport Download from '@axetroy/react-download';\r\n\r\n\r\nenum StatesEnum {\r\n    NotStarted = \"Not Started\",\r\n    Init1Pose = \"Init 1st Pose\",\r\n    Creating1Pose = \"Create 1st Pose\",\r\n    Init2Pose = \"Init 2nd Pose\",\r\n    Creating2Pose = \"Create 2nd Pose\",\r\n    Finished = \"Finished\"\r\n}\r\n\r\nexport default function CreateRep() {\r\n\r\n    let myName = \"CreateRep\";\r\n    let parents = [myName];\r\n\r\n    let startTime = 5;\r\n    let [state, setState] = useUniversalState<any>(myName, [], {\r\n        startPoses: [],\r\n        endPoses: [],\r\n        stage: StatesEnum.NotStarted,\r\n        time: 0,\r\n        frequency: 1,\r\n        name: '',\r\n    });\r\n\r\n    const trainingExamples = 100;\r\n\r\n    var { startPoses, endPoses, stage, time, frequency, name } = state;\r\n    const sampleFrequency = 20;\r\n\r\n    useEffect(() => {\r\n        if (time > 0) {\r\n\r\n\r\n            var timer = setTimeout(() => {\r\n                setState({ time: time - (1 / frequency) })\r\n            }, 1000 / frequency)\r\n\r\n\r\n            return () => clearTimeout(timer);\r\n        }\r\n\r\n\r\n\r\n    }, [time, frequency, setState]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (stage === StatesEnum.Init1Pose && time <= 0) {\r\n            setState({ stage: StatesEnum.Creating1Pose })\r\n        }\r\n\r\n        if (stage === StatesEnum.Creating1Pose && time <= 0) {\r\n\r\n            if (startPoses.length >= trainingExamples) {\r\n                setState({ stage: StatesEnum.Init2Pose, time: startTime, frequency: 1 })\r\n            }\r\n            else {\r\n                if (pose && pose.keypoints) {\r\n\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency, startPoses: [...startPoses, pose] });\r\n                } else {\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (stage === StatesEnum.Init2Pose && time <= 0) {\r\n            setState({ stage: StatesEnum.Creating2Pose })\r\n        }\r\n\r\n        if (stage === StatesEnum.Creating2Pose && time <= 0) {\r\n            if (endPoses.length >= trainingExamples) {\r\n                setState({ stage: StatesEnum.Finished })\r\n            }\r\n            else {\r\n                if (pose && pose.keypoints) {\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency, endPoses: [...endPoses, pose] });\r\n                } else {\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency });\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [time, stage, endPoses, setState, startPoses, startTime])\r\n\r\n\r\n\r\n\r\n\r\n    return <div style={{ margin: '10px' }}>\r\n        <TextField label=\"Name\" variant=\"filled\" onChange={(e) => setState({ name: e.target.value })} />\r\n        <WebCamPose parents={parents} />\r\n        {stage === StatesEnum.NotStarted && <Button\r\n            onClick={() => {\r\n                if (name !== '')\r\n                    setState({ stage: StatesEnum.Init1Pose, time: startTime })\r\n                else\r\n                    alert(\"Please type for this repition\")\r\n\r\n            }\r\n            } variant=\"outlined\">Create new Rep</Button>}\r\n        {stage === StatesEnum.Init1Pose &&\r\n            <Typography variant='h3'>Starting in to create 1st Pose, get in position. {Math.floor(time)}</Typography>\r\n        }\r\n        {stage === StatesEnum.Init2Pose &&\r\n            <Typography variant='h3'>Starting in to create 2nd Pose, get in position. {Math.floor(time)}</Typography>\r\n        }\r\n        <Download file=\"poses.json\" content={JSON.stringify([startPoses, endPoses])}>\r\n            <Button variant='outlined'>Download Data</Button>\r\n        </Download>\r\n    </div>\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar, Button, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport default function Header() {\r\n    let history = useHistory();\r\n    return <AppBar style={{ position:'unset'}}>\r\n        <Toolbar>\r\n            <div style={{ flex: 1, display: 'flex', flexDirection: 'row', justifyContent: 'flex-start' }}>\r\n                <div style={{ display: 'inline' }}>\r\n                    <Typography style={{ flex: 1, display: 'inline' }} variant=\"h6\" >\r\n                        Spotter\r\n                    </Typography>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/CountReps\") }} >\r\n                        Count Reps\r\n                    </Button>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/CreateRep\") }} >\r\n                        Create Rep\r\n                    </Button>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/TrainModel\") }} >\r\n                        Train Model\r\n                    </Button>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/DownloadLocalModels\") }} >\r\n                        Download Local Models\r\n                    </Button>\r\n            </div>\r\n\r\n            </div>\r\n        </Toolbar>\r\n    </AppBar >\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { Pose } from '@tensorflow-models/posenet';\r\n\r\n\r\nvar repnet: tf.LayersModel | undefined = undefined;\r\nexport async function loadFromLocal(name: string) {\r\n    clearRepnet();\r\n    repnet = await tf.loadLayersModel('localstorage://' + name);\r\n}\r\n\r\nexport async function loadModel(model: tf.LayersModel) {\r\n    clearRepnet();\r\n    repnet = model;\r\n}\r\n\r\nexport function clearRepnet(){\r\n    if(repnet)\r\n        repnet.dispose();\r\n    repnet = undefined;\r\n}\r\n\r\n\r\nexport function fromPoseToArray(pose: Pose) {\r\n    var positions = pose.keypoints.map(keypoint => {\r\n        return [keypoint.position.x / 600, keypoint.position.y / 600];\r\n    }).reduce((l, r) => r.concat(l));\r\n\r\n    return positions;\r\n}\r\n\r\nexport function fromPoseToTensor(pose: Pose) {\r\n    var data = fromPoseToArray(pose);\r\n    return tf.tensor(data, [1, data.length]);\r\n}\r\n\r\nexport function fromPosesToArrays(poses: Array<Pose>) {\r\n    return poses.map(pose => fromPoseToArray(pose));\r\n}\r\n\r\nexport function fromPosesToTensor(poses: Array<Pose>) {\r\n    var data = fromPosesToArrays(poses);\r\n    return tf.tensor(data);\r\n}\r\n\r\n\r\nexport default async function predict(pose: Pose) {\r\n    // load the posenet model from a checkpoint\r\n    if (repnet) {\r\n        var poseTensor = fromPoseToTensor(pose);\r\n\r\n        if (repnet) {\r\n            var prediction = repnet.predict(poseTensor);\r\n\r\n            if (!Array.isArray(prediction)) {\r\n\r\n                var result = tf.argMax(prediction, 1);\r\n\r\n                return result.bufferSync().get(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport predict from './predictPose'\r\nimport { Typography } from '@material-ui/core';\r\nimport pose from './pose';\r\nimport { setTimeout } from 'timers';\r\nimport useUniversalState from './reducers/useUniversalState';\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport default function PoseCounter({ parents = [] }: Props) {\r\n\r\n    const frequency = 5;\r\n    let [{ poseId, count, time }, setState] = useUniversalState<{ poseId: number | undefined, count: number, time: number }>(\r\n        \"PoseCounter\", [],\r\n        { poseId: 0, count: 0, time: 0 });\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        var timer = setTimeout(async () => {\r\n\r\n            if (pose.keypoints.length > 0) {\r\n                let pid = await predict(pose);\r\n\r\n                var c = 0;\r\n\r\n                if (pid !== undefined && poseId !== undefined && pid !== poseId && pid < 2 && poseId < 2) {\r\n                    c = 1;\r\n                }\r\n\r\n                setState({ poseId: pid, count: count + c, time: time + 1 });\r\n\r\n\r\n            } else {\r\n                setState({ poseId, count, time: time + 1 });\r\n            }\r\n\r\n        }, 1000 / frequency);\r\n\r\n\r\n        return () => clearTimeout(timer);\r\n\r\n    }, [time, count, poseId]);\r\n\r\n    return (\r\n        <div>\r\n            {/* <Typography>{poseId}</Typography> */}\r\n            <Typography color=\"primary\" variant=\"h3\">{Math.floor(count / 2)}</Typography>\r\n        </div>)\r\n}","import * as tf from '@tensorflow/tfjs'\r\nconst tensorflowPath: string = \"tensorflowjs_models/\";\r\nconst publicModelNames = require(\"./publicModelNames.json\");\r\n\r\nexport default async function getModels() {\r\n\r\n    let publicModels = await getPublicModels();\r\n    let localModels = await getLocalModels();\r\n\r\n    return [...publicModels, ...localModels];\r\n}\r\n\r\nexport async function getLocalModelNames() {\r\n\r\n    let modelNames: string[] = []\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n        var key = localStorage.key(i);\r\n        if (key && key.startsWith(tensorflowPath)) {\r\n            let name = key.substr(tensorflowPath.length);\r\n            let slashi = name.search(\"/\");\r\n            if (slashi !== -1)\r\n                name = name.substr(0, slashi);\r\n                \r\n            if (!modelNames.some((v) => v === name))\r\n                modelNames.push(name);\r\n        }\r\n    }\r\n\r\n    // let models = await Promise.all(modelNames.map(async name => ({name, model: await tf.loadLayersModel('localstorage://'+name)})));\r\n    modelNames.map(s=>'localstorage://'+s);\r\n\r\n    return modelNames;\r\n}\r\n\r\nexport async function getLocalModels(){\r\n    var names = await getLocalModelNames();\r\n    return Promise.all(names.map(async name=>({name:\"local/\"+name, load: () => tf.loadLayersModel(\"localstorage://\"+name)})));\r\n}\r\n\r\n\r\n\r\nexport function getPublicModels() {\r\n    return Promise.all(getPublicModelNames().map(async name=>({name:\"public/\"+name, load: () => {\r\n        console.log(process.env.PUBLIC_URL + '/' + name)\r\n        return tf.loadLayersModel( 'https://still-sierra-49247.herokuapp.com/Models/' + name)}})))\r\n}\r\n\r\nexport function getPublicModelNames() : string[] {\r\n    return publicModelNames;\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useUniversalState from '../reducers/useUniversalState';\r\n\r\n\r\ninterface DropDownOptionTitleValue {\r\n    title:string,\r\n    value:any\r\n}\r\n\r\nexport type DropDownOption = DropDownOptionTitleValue | string;\r\n\r\ninterface Props {\r\n    key?: any,\r\n    parents: string[],\r\n    values: DropDownOption[],\r\n    title: string,\r\n    name: string,\r\n    defaultValue?: string,\r\n    onChange?: any,\r\n}\r\n\r\n\r\nexport default function DropDownBox({ title, defaultValue, name, values, parents, onChange} : Props) {\r\n    var firstTitle = undefined;\r\n    if(values.length > 0){\r\n        //@ts-ignore\r\n        firstTitle = values[0].title || values[0];\r\n    }\r\n    let [value, setValue] = useUniversalState(name, parents,defaultValue || firstTitle || '')\r\n  \r\n    const menuItems = values.map((option: DropDownOption) => {\r\n        if(typeof option !== 'string')\r\n            return <MenuItem key={option.title} value={option.title}>{option.title}</MenuItem>\r\n        else \r\n            return <MenuItem key={option} value={option}>{option}</MenuItem>\r\n    });\r\n\r\n    return <FormControl style={{minWidth: 120}}>\r\n        <InputLabel id={name + \"-label\"}>{title}</InputLabel>\r\n        <Select\r\n            value={value}\r\n            onChange={(e:any)=>{\r\n                value = values.find((value)=>\r\n                    value===e.target.value ||\r\n                    //@ts-ignore\r\n                    (value.title === e.target.value))\r\n                setValue(e.target.value)\r\n                if(onChange)\r\n                    onChange(value.value || value)\r\n            }}\r\n        >\r\n            {menuItems}\r\n        </Select>\r\n    </FormControl>\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PoseCounter from './PoseCounter';\r\nimport WebCamPose from './WebCamPose';\r\nimport getModels from './getModels';\r\nimport DropDownBox, { DropDownOption } from './DropDown/DropDownBox';\r\nimport { loadFromLocal, clearRepnet, loadModel } from './predictPose';\r\nimport { async } from 'q';\r\nimport { Button } from '@material-ui/core';\r\nimport useUniversalState from './reducers/useUniversalState';\r\n\r\nexport default function CountReps() {\r\n    let myName = \"CountReps\";\r\n    let parents = [myName];\r\n\r\n    let [models, setModels] = useState<DropDownOption[]>([]);\r\n    let [_, setCount] = useUniversalState(\"PoseCounter\",[]);\r\n\r\n    useEffect(() => {\r\n       getModels().then(models => {\r\n        var modelOptions = models.map(({name, load}:any)=>({title:name, value:{name, load}}))   \r\n        setModels([\"No Model\",...modelOptions])\r\n    });\r\n    }, []);\r\n\r\n\r\n    \r\n\r\n    return <div>\r\n        <PoseCounter/>\r\n        <WebCamPose parents={parents} />\r\n        <DropDownBox name=\"model\" title=\"Model\" parents={parents} values={models}\r\n        onChange={async (value:any)=>{\r\n            if(value)\r\n                loadModel(await value.load());\r\n            else\r\n                clearRepnet();\r\n                \r\n        }}\r\n        />\r\n        <Button variant=\"contained\" onClick={()=>{setCount({ poseId: 0, count: 0, time:0 })}}>Clear</Button>\r\n    </div>\r\n}","\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport { Pose } from '@tensorflow-models/posenet';\r\n\r\n\r\nexport async function trainModelFromStorage(name: string, states: Array<Array<Pose>>, progress?: (info: tf.History)=>void){\r\n    const inputSize = states[0][0].keypoints.length * 2;\r\n    const outputSize = states.length;\r\n\r\n    try {\r\n        var model = await tf.loadLayersModel('localstorage://' + name);\r\n    } catch (e) {\r\n        model = tf.sequential({\r\n            layers: [\r\n                tf.layers.dense({ inputShape: [inputSize], units: inputSize * 2, activation: 'sigmoid' }),\r\n                tf.layers.dense({ units: outputSize * 2, activation: 'sigmoid' }),\r\n                tf.layers.dense({ units: outputSize, activation: 'sigmoid' }),\r\n            ]\r\n        });\r\n    }\r\n\r\n    await train(model, states, progress);\r\n\r\n    await model.save('localstorage://' + name);\r\n}\r\n\r\nexport default async function train(model: tf.LayersModel, states: Array<Array<Pose>>, progress?: (info : tf.History)=>void) {\r\n    if (!states[0])\r\n        return;\r\n    const inputSize = states[0][0].keypoints.length * 2;\r\n    const outputSize = states.length;\r\n\r\n\r\n\r\n\r\n    model.compile({\r\n        optimizer: tf.train.sgd(0.1),\r\n        loss: tf.losses.meanSquaredError,\r\n    });\r\n\r\n    // Generate dummy data.\r\n    const toData = (poses: Array<Pose>) => {\r\n        return poses.map((pose) => {\r\n            var positions = pose.keypoints.map(keypoint => {\r\n                return [keypoint.position.x / 600, keypoint.position.y / 600];\r\n            }).reduce((l, r) => r.concat(l));\r\n\r\n            return positions;\r\n        });\r\n    }\r\n\r\n    const toLabel = (label: number, num: number) => {\r\n        var labels = [];\r\n        for (var i = 0; i < num; i++) {\r\n            labels.push(label)\r\n        }\r\n        return labels;\r\n    }\r\n\r\n    const datas = states.map(data=>toData(data));\r\n    const labelss = states.map((label,index)=>toLabel(index, label.length));\r\n\r\n    const dataD = datas.reduce((a,b)=>a.concat(b));\r\n    const labelsD = labelss.reduce((a,b)=>a.concat(b));\r\n\r\n\r\n\r\n    const data = tf.tensor(dataD);\r\n    const labels = tf.oneHot(labelsD, outputSize);\r\n\r\n\r\n\r\n    for (let index = 0; index < 10; index++) {\r\n        // Train for 5 epochs with batch size of 32.\r\n        await model.fit(data, labels, {\r\n            epochs: 10,\r\n            batchSize: 16,\r\n        }).then(info => {\r\n            if(progress)\r\n                progress(info);\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport getModels, { getPublicModels } from './getModels';\r\nimport DropDownBox, { DropDownOption } from './DropDown/DropDownBox';\r\n\r\ninterface Props {\r\n    parents: any[],\r\n    onChange?: (value:any)=>void\r\n}\r\n\r\nexport default function ExistingModelDropDown({ parents, onChange }: Props) {\r\n    let [models, setModels] = useState<DropDownOption[]>([]);\r\n\r\n    useEffect(() => {\r\n        getModels().then(async models => {\r\n            var modelOptions = models.map(({name, load}:any)=>({title:name, value:{name, load}})) \r\n           \r\n            setModels([\"No Model\", ...modelOptions])\r\n        });\r\n    }, []);\r\n\r\n    return <DropDownBox name=\"model\" title=\"Model\" parents={parents} values={models}\r\n        onChange={(value: any) => {\r\n            if(onChange)\r\n                onChange(value)\r\n        }}\r\n    />\r\n}","import React, { useState } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport { TextField, Button, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { trainModelFromStorage } from './trainRepRecognition';\r\nimport ExistingModelDropDown from './ExistingModelDrowDown';\r\nimport { XAxis, CartesianGrid, Line, LineChart, Tooltip, YAxis } from 'recharts'\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport default function TrainModel({ parents = [] }: Props) {\r\n    let myName = \"TrainModel\";\r\n\r\n    let [{ name, posess, existingModel, existingModelSelect }, setState] = useUniversalState<any>(myName, parents, {\r\n        posess: undefined,\r\n        name: '',\r\n        existingModel: false,\r\n        existingModelSelect: undefined,\r\n        \r\n    });\r\n\r\n    let [infos, setInfos] = useState<any[]>([]);\r\n\r\n    parents = [...parents, myName];\r\n\r\n    const trainProgress = (info: tf.History) => {\r\n        setInfos(prevInfos => ([...prevInfos, {loss: info.history.loss[0], time: prevInfos.length} ]) );\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (!existingModel && name === '') {\r\n            alert(\"Please pick a name for this model\");\r\n            return;\r\n        }\r\n\r\n        if (existingModel && (!existingModelSelect || existingModelSelect.name === \"No Model\")) {\r\n            alert(\"Please pick an existing model\");\r\n            return;\r\n        }\r\n\r\n        if (posess) {\r\n            if (existingModel) {\r\n                if (existingModelSelect.fromLocal) {\r\n                    trainModelFromStorage(existingModelSelect.name, posess, trainProgress);\r\n                }\r\n            } else {\r\n                trainModelFromStorage(name, posess, trainProgress);\r\n            }\r\n\r\n        }\r\n        else\r\n            alert(\"Please pick training data\")\r\n    }\r\n\r\n    const newName = <TextField label=\"Name\" style={{background: undefined}} color='primary' variant=\"standard\" onChange={(e) => setState({ name: e.target.value })} />\r\n\r\n\r\n    const existingModelDropDown = <ExistingModelDropDown parents={parents} onChange={(e) => setState({ existingModelSelect: e })} />\r\n\r\n    return <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <FormControlLabel\r\n            control={<Checkbox name=\"existingModel\" value={existingModel} onChange={(e) => setState({ existingModel: e.target.checked })} />}\r\n            label=\"Existing Model\"\r\n        />\r\n        {existingModel ? existingModelDropDown : newName}\r\n        <input type='file' accept=\".json\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            if (e ?.target ?.files) {\r\n                if (e ?.target ?.files.length > 0) {\r\n                    var file = e ?.target ?.files[0];\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        if (event ?.target ?.result) {\r\n                            //@ts-ignore\r\n                            var posess = JSON.parse(event.target.result);\r\n\r\n                            setState({ posess })\r\n                        }\r\n\r\n                    };\r\n                    reader.readAsText(file);\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }} />\r\n        <Button variant='contained' onClick={onSubmit}>Train</Button>\r\n        <LineChart\r\n            width={400}\r\n            height={400}\r\n            data={infos}\r\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n        >\r\n            <XAxis dataKey=\"time\" label=\"Time\" />\r\n            <YAxis dataKey=\"loss\" label=\"Loss\" />\r\n            <Tooltip />\r\n            <CartesianGrid stroke=\"#f5f5f5\" />\r\n            <Line type=\"monotone\" dataKey=\"loss\" stroke=\"#ff7300\" />\r\n        </LineChart>\r\n\r\n    </div>\r\n}","import React, { useState } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport { TextField, Button, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { trainModelFromStorage } from './trainRepRecognition';\r\nimport ExistingModelDropDown from './ExistingModelDrowDown';\r\nimport { XAxis, CartesianGrid, Line, LineChart, Tooltip, YAxis } from 'recharts'\r\n//@ts-ignore\r\nimport Download from '@axetroy/react-download';\r\nimport getModels from './getModels';\r\n\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport default function DownloadLocalModels({ parents = [] }: Props) {\r\n\r\n    const download = async () => {\r\n        var models = await getModels();\r\n        Promise.all(models.map(async (model) => {\r\n            //localStorage.getItem(\"\")\r\n            var m = await tf.loadLayersModel('localstorage://' + model);\r\n            m.save('downloads://' + model);\r\n        }))\r\n\r\n    }\r\n    return <div>\r\n        <Button variant='outlined' onClick={download}>Download Data</Button>\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport CreateRep from './CreateRep';\nimport { Switch, Route, Redirect } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './Header';\nimport CountReps from './CountReps';\nimport TrainModel from './TrainModel';\nimport { ThemeProvider, createMuiTheme, Box, CssBaseline } from '@material-ui/core';\nimport DownloadLocalModels from './DownloadLocalModels';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n})\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter basename=\"/Spotter\">\n        <Switch>\n          <Route path=\"\">\n            <Header />\n            <Box my={4} className=\"App-header\" color=\"background\">\n              <Route path=\"/CreateRep\" exact>\n                <CreateRep />\n              </Route>\n              <Route path=\"/CountReps\" exact>\n                <CountReps />\n              </Route>\n              <Route path=\"/TrainModel\" exact>\n                <TrainModel />\n              </Route>\n              <Route path=\"/DownloadLocalModels\" exact>\n                <DownloadLocalModels />\n              </Route>\n              <Route path='*' exact={true}>\n                <Redirect to=\"/CountReps\" />\n              </Route>\n            </Box>\n          </Route>\n        </Switch>\n\n      </BrowserRouter>\n\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\n \nimport store from './reducers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}