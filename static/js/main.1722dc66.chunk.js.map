{"version":3,"sources":["functions/removeUndefined/removeUndefined.tsx","reducers/UniversalReducer.tsx","reducers/store.tsx","reducers/onChange.tsx","reducers/useUniversalState.tsx","VideoWithArmature.tsx","WebCameCapture.tsx","estimatePoseOnImage.js","pose.tsx","WebCamPose.tsx","CreateRep.tsx","Header.tsx","predictPose.ts","PoseCounter.tsx","getModels.ts","DropDown/DropDownBox.tsx","CountReps.tsx","trainRepRecognition.ts","ExistingModelDrowDown.tsx","reducers/getState.tsx","TrainModel.tsx","DownloadLocalModels.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["removeUndefined","obj","Array","isArray","filter","item","undefined","Object","keys","forEach","key","changeState","state","parents","data","merge","parent","shift","value","_","isFunction","console","log","Number","isInteger","newList","store","createStore","combineReducers","universalReducer","action","type","search","payload","window","__REDUX_DEVTOOLS_EXTENSION__","onChange","name","newParents","longName","reduce","l","r","dispatch","useUniversalState","init","change","useSelector","getState","JSON","stringify","initString","useEffect","lodash","cloneDeep","VideoWithArmature","pose","props","canvasRef","useRef","canvas","current","context","getContext","animationFrameId","render","ctx","frameCount","clearRect","width","height","fillStyle","keypoints","keypoint","beginPath","arc","position","x","y","Math","PI","fill","draw","requestAnimationFrame","cancelAnimationFrame","style","top","left","right","bottom","objectFit","ref","videoConstraints","facingMode","WebcamCapture","setVideo","webcamRef","React","useCallback","video","onloadedmetadata","audio","screenshotFormat","net","posenet","require","load","a","test","image","estimateSinglePose","flipHorizontal","decodingMethod","score","WebCamePose","p","useState","setPose","showBones","setShowBones","estimatePoseOnImage","paddingTop","FormControlLabel","control","Checkbox","defaultChecked","e","target","checked","label","StatesEnum","CreateRep","startPoses","endPoses","stage","NotStarted","time","frequency","setState","timer","setTimeout","clearTimeout","Init1Pose","Creating1Pose","length","Init2Pose","Creating2Pose","Finished","maxHeight","flex","maxWidth","TextField","variant","display","flexDirection","alignItems","Button","onClick","alert","Typography","floor","file","content","Header","history","useHistory","AppBar","Toolbar","justifyContent","color","marginLeft","marginRight","push","repnet","loadModel","model","clearRepnet","dispose","fromPoseToArray","map","concat","fromPoseToTensor","tf","predict","poseTensor","prediction","result","bufferSync","get","PoseCounter","poseId","count","pid","c","prev","align","getModels","getPublicModels","publicModels","getLocalModels","localModels","getLocalModelNames","modelNames","i","localStorage","startsWith","substr","slashi","some","v","s","names","Promise","all","getPublicModelNames","process","fetch","response","json","DropDownBox","title","defaultValue","values","firstTitle","setValue","menuItems","option","MenuItem","FormControl","minWidth","InputLabel","id","Select","find","CountReps","models","setModels","setCount","then","modelOptions","trainModelFromStorage","states","progress","inputSize","outputSize","layers","dense","inputShape","units","activation","train","save","compile","optimizer","sgd","loss","meanSquaredError","toData","poses","toLabel","num","labels","datas","labelss","index","dataD","b","labelsD","fit","epochs","batchSize","info","ExistingModelDropDown","getStateI","TrainModel","oldParents","posess","existingModel","existingModelSelect","isTraining","keepTraining","infos","setInfos","trainProgress","prevInfos","onSubmit","fromLocal","newName","background","existingModelDropDown","accept","files","reader","FileReader","onload","event","parse","readAsText","margin","dataKey","stroke","DownloadLocalModels","download","theme","createMuiTheme","palette","App","ThemeProvider","CssBaseline","basename","path","Box","my","className","exact","to","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1722dc66.chunk.js","sourcesContent":["\r\n\r\n\r\nexport default function removeUndefined(obj: any) {\r\n    if (Array.isArray(obj)) {\r\n        obj = obj.filter((item) => item !== undefined);\r\n    } else if (typeof obj === 'object') {\r\n        obj = { ...obj }\r\n        Object.keys(obj).forEach(key => {if(obj[key] === undefined)  delete obj[key] });\r\n    }\r\n    return obj;\r\n}","import Action from './Action'\r\nimport _ from 'underscore';\r\nimport removeUndefined from '../functions/removeUndefined/removeUndefined';\r\n\r\n\r\nexport default function universalReducer(\r\n    state: any = {},\r\n    action: Action): any {\r\n  \r\n    if(action.type.search(\"Change\") !== -1){\r\n            let data = action.payload.data;\r\n            let parents = action.payload.parents;\r\n            let merge = action.payload.merge;\r\n            return changeState(state, parents, data, merge)\r\n    } \r\n    return state;\r\n}\r\n\r\n\r\nfunction changeState(state: any, parents: any[], data: any, merge: boolean): any {\r\n    let parent = parents.shift();\r\n    if (parent === undefined) {\r\n        if (data){\r\n            Object.keys(data).forEach((key: string) => {\r\n                let value = data[key];\r\n                if (_.isFunction(value)) {\r\n                    console.log(state[key])\r\n                    data[key] = value(state[key]);\r\n                }\r\n            })\r\n        }\r\n        if(_.isFunction(data)){\r\n            data = data(state)\r\n        }\r\n\r\n\r\n        if (merge) {\r\n            if (typeof state === 'object' && typeof data === 'object') {\r\n                if (Array.isArray(data))\r\n                    return removeUndefined(Array.isArray(state) ? [...state, ...data] : [...data])\r\n                else{\r\n                    return removeUndefined({ ...state, ...data })\r\n                }\r\n            }\r\n            else {\r\n                return data\r\n            }\r\n        }\r\n        else if (data){\r\n            return data;\r\n        }\r\n        return data\r\n    }\r\n\r\n    if (Number.isInteger(parent)) {\r\n        var newList = Array.isArray(state) ? [...state] : []\r\n        //@ts-ignore\r\n        newList[parent] = changeState(newList[parent], parents, data, merge)\r\n        return removeUndefined(newList);\r\n    }\r\n    else {\r\n        if (state !== undefined) {\r\n            if(parent in state){\r\n                return removeUndefined({ ...state, [parent]: changeState(state[parent], parents, data, merge) })\r\n            }else{\r\n                return removeUndefined({ ...state, [parent]: changeState({}, parents, data, merge) })\r\n            }\r\n        } else {\r\n            return removeUndefined({ [parent]: changeState({}, parents, data, merge) })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import {createStore, combineReducers} from  'redux'\r\nimport universalReducer from \"./UniversalReducer\";\r\n\r\n let store = createStore(\r\n    combineReducers({universalReducer }),   /* preloadedState, */\r\n    //@ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nexport default store;","import store from './store'\r\n\r\n\r\nconst onChange = (name: string, parents: string[]) => (data: any, merge: boolean = true) => {\r\n    var newParents = [...parents, name];\r\n    var longName = newParents.reduce((l,r)=>l+r);\r\n    store.dispatch({type:'Change ' + longName, payload:{parents: newParents, data, merge}})\r\n}\r\n\r\nexport default onChange;","import { useSelector } from 'react-redux';\r\nimport onChange from './onChange';\r\nimport { useEffect } from 'react';\r\nimport lodash from 'lodash';\r\n\r\nexport function getState(state: any, parents: string[]) : any{\r\n    let parent = parents.shift();\r\n\r\n    //if my parent is null\r\n    if(parent === undefined)\r\n        return state\r\n    \r\n    if(parent in state && state[parent]){\r\n        return getState(state[parent], parents);\r\n    }\r\n    return undefined\r\n}\r\n\r\n\r\nexport default function useUniversalState<T = any>(name: any, parents: string[], init?: T) : [T, any]{\r\n    let change = onChange(name, parents);\r\n    //@ts-ignore\r\n    let state = useSelector(state => getState(state.universalReducer, [...parents, name]),\r\n    (l:any, r:any)=>{\r\n         return JSON.stringify(l)===JSON.stringify(r)}\r\n    );\r\n\r\n    let initString = JSON.stringify(init);\r\n    useEffect(() => {\r\n        if(init !== undefined && state === undefined)\r\n            change(init, false)\r\n    //i am using init as a string, but type script thinks i am not including init\r\n    //used it as a string as files change everytime and infinite loop occurs\r\n    //ptrs change but values are still the same\r\n    // eslint-disable-next-line\r\n    }, [initString])\r\n\r\n    //before the init state is updated from hook, just pass back init data\r\n    //as user is expecting it to be init from the start\r\n    \r\n    if(state===undefined && init !== undefined){\r\n        return [ lodash.cloneDeep(init), change]\r\n    }\r\n    if(state === undefined)\r\n        state={}\r\n\r\n    return [ lodash.cloneDeep(state), change];\r\n}","import React, { useRef, useEffect } from 'react';\r\nimport { Pose } from '@tensorflow-models/posenet';\r\n\r\ninterface Props {\r\n    pose?: Pose,\r\n    [propName: string]: any;\r\n}\r\n\r\nfunction draw(ctx: any, frameCount: number, pose?: Pose){\r\n\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    ctx.fillStyle = '#000000'\r\n    if (pose && pose.keypoints) {\r\n        pose.keypoints.forEach(keypoint => {\r\n                ctx.beginPath()\r\n                ctx.arc(keypoint.position.x, keypoint.position.y, ctx.canvas.width*0.01, 0, 2 * Math.PI)\r\n                ctx.fill()\r\n        })\r\n\r\n    }        \r\n}\r\n\r\nexport default function VideoWithArmature({ pose, ...props }: Props) {\r\n    const canvasRef = useRef(null)\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n\r\n       \r\n\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            //@ts-ignore\r\n            const context = canvas.getContext('2d')\r\n            let frameCount = 0\r\n            let animationFrameId: any = undefined;\r\n\r\n            //Our draw came here\r\n            const render = () => {\r\n                frameCount++\r\n                draw(context, frameCount, pose)\r\n                animationFrameId = window.requestAnimationFrame(render)\r\n            }\r\n            render()\r\n\r\n            return () => {\r\n                window.cancelAnimationFrame(animationFrameId)\r\n            }\r\n        }\r\n    }, [pose])\r\n\r\n    return  <div style={{ position: 'absolute', top:0, left:0, right:0, bottom:0 }}>        \r\n        <canvas style={{objectFit:\"cover\", width:\"100%\", height:\"100%\"}} ref={canvasRef} {...props} />\r\n        </div>\r\n}","import React from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport useUniversalState from './reducers/useUniversalState';\r\n\r\nconst videoConstraints = {\r\n    facingMode: \"user\",\r\n    width: 300,\r\n    height: 300\r\n};\r\n\r\ninterface Props {\r\n    parents?: any[],\r\n    width?:number,\r\n    height?: number\r\n}\r\n\r\nexport default function WebcamCapture({ parents=[], width=600, height=500 }: Props) {\r\n    let s = useUniversalState(\"WebCamCapture\", parents);\r\n    var setVideo = s[1];\r\n\r\n     const webcamRef = React.useCallback(\r\n        (current) => {            \r\n            if (current) {\r\n                //@ts-ignore\r\n                var video = current.video\r\n                video.onloadedmetadata = () => {\r\n                    setVideo({video})\r\n                };\r\n            }else{\r\n                setVideo(undefined)\r\n            }\r\n        },\r\n        // eslint-disable-next-line\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div style={{ position: 'absolute', top:0, left:0, right:0, bottom:0 }}>\r\n            <Webcam\r\n                style={{objectFit:\"cover\", width:\"100%\", height:\"100%\"}}\r\n                audio={false}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={200}\r\n                height={200}\r\n                videoConstraints={videoConstraints}\r\n            />\r\n        </div>\r\n    );\r\n};","const posenet = require('@tensorflow-models/posenet');\r\n\r\n\r\nvar net;\r\nasync function load() {\r\n    net = await posenet.load({\r\n        // outputStride: 8,\r\n        // inputResolution:{height:100, width:100}\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport default async function test(image) {\r\n    // load the posenet model from a checkpoint\r\n    if (!net) {\r\n        await load()\r\n\r\n    }\r\n\r\n    const pose = await net.estimateSinglePose(image, {\r\n        flipHorizontal: false,\r\n        decodingMethod: 'single-person'\r\n    });\r\n\r\n    return pose;\r\n}","import { Pose } from \"@tensorflow-models/posenet\";\r\n\r\n\r\nvar pose : Pose = {score:0, keypoints: []};\r\nexport const setPose = (p:Pose)=>{\r\n    pose.score = p.score;\r\n    pose.keypoints = [...p.keypoints]\r\n};\r\n\r\n\r\n\r\n\r\nexport default pose;","import React, { useEffect, useState } from 'react';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport { Pose } from '@tensorflow-models/posenet';\r\nimport VideoWithArmature from './VideoWithArmature';\r\nimport WebcamCapture from './WebCameCapture';\r\nimport estimatePoseOnImage from './estimatePoseOnImage'\r\nimport { setPose as setPoseGlobal } from './pose';\r\nimport {IconButton, FormControlLabel, Checkbox} from \"@material-ui/core\"\r\nimport {Menu } from '@material-ui/core/'\r\n\r\ninterface Props {\r\n  parents?: any[]\r\n}\r\n\r\nexport default function WebCamePose({ parents = [] }: Props) {\r\n\r\n  let [{ video }] = useUniversalState(\"WebCamCapture\", parents);\r\n  let [pose, setPose] = useState<Pose | undefined>();\r\n  let [showBones, setShowBones] = useState(true);\r\n\r\n  if (pose) {\r\n    setPoseGlobal(pose);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const render = async () => {\r\n      if (video) {\r\n        // console.log(parents, video)\r\n        setPose(await estimatePoseOnImage(video));\r\n\r\n        // if(video)\r\n        window.requestAnimationFrame(render);\r\n      }\r\n\r\n    }\r\n\r\n    //if(video)\r\n    render()\r\n  }, [video])\r\n\r\n  return <div style={{width: '100%',}}>\r\n    <div style={{ position: 'relative', width: '100%', paddingTop: '100%'}}>\r\n    \r\n    <WebcamCapture parents={parents} />\r\n    {showBones && \r\n    <VideoWithArmature pose={pose} width={video ?.width} height={video ?.height} />\r\n    }\r\n    \r\n  </div>\r\n  <FormControlLabel\r\n            control={<Checkbox name=\"showBones\" defaultChecked value={showBones} onChange={(e) => setShowBones(e.target.checked)} />}\r\n            label=\"Show Bones\"\r\n        />\r\n  </div>\r\n}","import React, { useEffect } from 'react';\r\nimport WebCamPose from './WebCamPose';\r\nimport { Button, Typography, TextField } from '@material-ui/core';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport pose from './pose';\r\n//@ts-ignore\r\nimport Download from '@axetroy/react-download';\r\n\r\n\r\nenum StatesEnum {\r\n    NotStarted = \"Not Started\",\r\n    Init1Pose = \"Init 1st Pose\",\r\n    Creating1Pose = \"Create 1st Pose\",\r\n    Init2Pose = \"Init 2nd Pose\",\r\n    Creating2Pose = \"Create 2nd Pose\",\r\n    Finished = \"Finished\"\r\n}\r\n\r\nexport default function CreateRep() {\r\n\r\n    let myName = \"CreateRep\";\r\n    let parents = [myName];\r\n\r\n    let startTime = 5;\r\n    let [state, setState] = useUniversalState<any>(myName, [], {\r\n        startPoses: [],\r\n        endPoses: [],\r\n        stage: StatesEnum.NotStarted,\r\n        time: 0,\r\n        frequency: 1,\r\n        name: '',\r\n    });\r\n\r\n    const trainingExamples = 100;\r\n\r\n    var { startPoses, endPoses, stage, time, frequency, name } = state;\r\n    const sampleFrequency = 20;\r\n\r\n    useEffect(() => {\r\n        if (time > 0) {\r\n\r\n\r\n            var timer = setTimeout(() => {\r\n                setState({ time: time - (1 / frequency) })\r\n            }, 1000 / frequency)\r\n\r\n\r\n            return () => clearTimeout(timer);\r\n        }\r\n\r\n\r\n\r\n    }, [time, frequency, setState]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (stage === StatesEnum.Init1Pose && time <= 0) {\r\n            setState({ stage: StatesEnum.Creating1Pose })\r\n        }\r\n\r\n        if (stage === StatesEnum.Creating1Pose && time <= 0) {\r\n\r\n            if (startPoses.length >= trainingExamples) {\r\n                setState({ stage: StatesEnum.Init2Pose, time: startTime, frequency: 1 })\r\n            }\r\n            else {\r\n                if (pose && pose.keypoints) {\r\n\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency, startPoses: [...startPoses, pose] });\r\n                } else {\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (stage === StatesEnum.Init2Pose && time <= 0) {\r\n            setState({ stage: StatesEnum.Creating2Pose })\r\n        }\r\n\r\n        if (stage === StatesEnum.Creating2Pose && time <= 0) {\r\n            if (endPoses.length >= trainingExamples) {\r\n                setState({ stage: StatesEnum.Finished })\r\n            }\r\n            else {\r\n                if (pose && pose.keypoints) {\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency, endPoses: [...endPoses, pose] });\r\n                } else {\r\n                    setState({ time: 2 / sampleFrequency, frequency: sampleFrequency });\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [time, stage, endPoses, setState, startPoses, startTime])\r\n\r\n\r\n\r\n\r\n\r\n    return   <div style={{ width: '50%', maxHeight: \"30%\", flex: 1, maxWidth: \"60vh\" }}>\r\n        <TextField label=\"Name\" variant=\"filled\" onChange={(e) => setState({ name: e.target.value })} />\r\n      \r\n        \r\n\r\n        <div style={{ width: '100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n            <div style={{ width: '100%',  flex:1 }}>\r\n                <WebCamPose parents={parents} />\r\n            </div>\r\n        </div>\r\n        \r\n        {stage === StatesEnum.NotStarted && <Button\r\n            onClick={() => {\r\n                if (name !== '')\r\n                    setState({ stage: StatesEnum.Init1Pose, time: startTime })\r\n                else\r\n                    alert(\"Please type for this repition\")\r\n\r\n            }\r\n            } variant=\"outlined\">Create new Rep</Button>}\r\n        {stage === StatesEnum.Init1Pose &&\r\n            <Typography variant='h3'>Starting in to create 1st Pose, get in position. {Math.floor(time)}</Typography>\r\n        }\r\n        {stage === StatesEnum.Init2Pose &&\r\n            <Typography variant='h3'>Starting in to create 2nd Pose, get in position. {Math.floor(time)}</Typography>\r\n        }\r\n        <Download file=\"poses.json\" content={JSON.stringify([startPoses, endPoses])}>\r\n            <Button variant='outlined'>Download Data</Button>\r\n        </Download>\r\n    </div>\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar, Button, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nexport default function Header() {\r\n    let history = useHistory();\r\n    return <AppBar style={{ position:'unset'}}>\r\n        <Toolbar>\r\n            <div style={{ flex: 1, display: 'flex', flexDirection: 'row', justifyContent: 'flex-start' }}>\r\n                <div style={{ display: 'inline' }}>\r\n                    <Typography style={{ flex: 1, display: 'inline' }} variant=\"h6\" >\r\n                        Spotter\r\n                    </Typography>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/CountReps\") }} >\r\n                        Count Reps\r\n                    </Button>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/CreateRep\") }} >\r\n                        Create Rep\r\n                    </Button>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/TrainModel\") }} >\r\n                        Train Model\r\n                    </Button>\r\n\r\n                    <Button color=\"inherit\" style={{ flex: 1, marginLeft: '15px', marginRight: '15px' }} onClick={() => { history.push(\"/DownloadLocalModels\") }} >\r\n                        Download Local Models\r\n                    </Button>\r\n            </div>\r\n\r\n            </div>\r\n        </Toolbar>\r\n    </AppBar >\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { Pose } from '@tensorflow-models/posenet';\r\n\r\n\r\nvar repnet: tf.LayersModel | undefined = undefined;\r\nexport async function loadFromLocal(name: string) {\r\n    clearRepnet();\r\n    repnet = await tf.loadLayersModel('localstorage://' + name);\r\n}\r\n\r\nexport async function loadModel(model: tf.LayersModel) {\r\n    clearRepnet();\r\n    repnet = model;\r\n}\r\n\r\nexport function clearRepnet(){\r\n    if(repnet)\r\n        repnet.dispose();\r\n    repnet = undefined;\r\n}\r\n\r\n\r\nexport function fromPoseToArray(pose: Pose) {\r\n    var positions = pose.keypoints.map(keypoint => {\r\n        return [keypoint.position.x / 600, keypoint.position.y / 600];\r\n    }).reduce((l, r) => r.concat(l));\r\n\r\n    return positions;\r\n}\r\n\r\nexport function fromPoseToTensor(pose: Pose) {\r\n    var data = fromPoseToArray(pose);\r\n    return tf.tensor(data, [1, data.length]);\r\n}\r\n\r\nexport function fromPosesToArrays(poses: Array<Pose>) {\r\n    return poses.map(pose => fromPoseToArray(pose));\r\n}\r\n\r\nexport function fromPosesToTensor(poses: Array<Pose>) {\r\n    var data = fromPosesToArrays(poses);\r\n    return tf.tensor(data);\r\n}\r\n\r\n\r\nexport default async function predict(pose: Pose) {\r\n    // load the posenet model from a checkpoint\r\n    if (repnet) {\r\n        var poseTensor = fromPoseToTensor(pose);\r\n\r\n        if (repnet) {\r\n            var prediction = repnet.predict(poseTensor);\r\n\r\n            if (!Array.isArray(prediction)) {\r\n\r\n                var result = tf.argMax(prediction, 1);\r\n\r\n                return result.bufferSync().get(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport predict from './predictPose'\r\nimport { Typography } from '@material-ui/core';\r\nimport pose from './pose';\r\nimport { setTimeout } from 'timers';\r\nimport useUniversalState from './reducers/useUniversalState';\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport default function PoseCounter({ parents = [] }: Props) {\r\n\r\n    const frequency = 5;\r\n    let [{ poseId, count, time }, setState] = useUniversalState<{ poseId: number | undefined, count: number, time: number }>(\r\n        \"PoseCounter\", [],\r\n        { poseId: 0, count: 0, time: 0 });\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        var timer = setTimeout(async () => {\r\n\r\n            if (pose.keypoints.length > 0) {\r\n                let pid = await predict(pose);\r\n\r\n                var c = 0;\r\n\r\n                if (pid !== undefined && poseId !== undefined && pid !== poseId && pid < 2 && poseId < 2) {\r\n                    c = 1;\r\n                }\r\n                \r\n                setState((prev:any)=>({ poseId: pid, count: prev.count + c, time: prev.time + 1 }));\r\n\r\n\r\n            } else {\r\n                setState({ poseId, count, time: time + 1 });\r\n            }\r\n\r\n        }, 1000 / frequency);\r\n\r\n\r\n        return () => clearTimeout(timer);\r\n\r\n    }, [time]);\r\n\r\n    return (\r\n        <div>\r\n            {/* <Typography>{poseId}</Typography> */}\r\n            <Typography align=\"center\" color=\"primary\" variant=\"h1\">{Math.floor(count / 2)}</Typography>\r\n        </div>)\r\n}","import * as tf from '@tensorflow/tfjs'\r\nconst tensorflowPath: string = \"tensorflowjs_models/\";\r\nconst publicModelNames = require(\"./publicModelNames.json\");\r\n\r\nexport default async function getModels() {\r\n\r\n    let publicModels = await getPublicModels();\r\n    let localModels = await getLocalModels();\r\n\r\n    return [...publicModels, ...localModels];\r\n}\r\n\r\nexport async function getLocalModelNames() {\r\n\r\n    let modelNames: string[] = []\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n        var key = localStorage.key(i);\r\n        if (key && key.startsWith(tensorflowPath)) {\r\n            let name = key.substr(tensorflowPath.length);\r\n            let slashi = name.search(\"/\");\r\n            if (slashi !== -1)\r\n                name = name.substr(0, slashi);\r\n                \r\n            if (!modelNames.some((v) => v === name))\r\n                modelNames.push(name);\r\n        }\r\n    }\r\n\r\n    // let models = await Promise.all(modelNames.map(async name => ({name, model: await tf.loadLayersModel('localstorage://'+name)})));\r\n    modelNames.map(s=>'localstorage://'+s);\r\n\r\n    return modelNames;\r\n}\r\n\r\nexport async function getLocalModels(){\r\n    var names = await getLocalModelNames();\r\n    return Promise.all(names.map(async name=>({name:\"local/\"+name, load: () => tf.loadLayersModel(\"localstorage://\"+name)})));\r\n}\r\n\r\n\r\n\r\nexport async function getPublicModels() {\r\n    var modelNames = await getPublicModelNames();\r\n    return Promise.all(modelNames.map(async (name:any)=>({name:\"public/\"+name, load: () => {\r\n        console.log(process.env.PUBLIC_URL + '/' + name)\r\n        return tf.loadLayersModel( 'https://still-sierra-49247.herokuapp.com/Models/' + name)}})))\r\n}\r\n\r\nexport async function getPublicModelNames() : Promise<string[]>  {\r\n    var response =  await fetch(\"https://still-sierra-49247.herokuapp.com/Models/modelNames.json\");\r\n    return await response.json()\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useUniversalState from '../reducers/useUniversalState';\r\n\r\n\r\ninterface DropDownOptionTitleValue {\r\n    title:string,\r\n    value:any\r\n}\r\n\r\nexport type DropDownOption = DropDownOptionTitleValue | string;\r\n\r\ninterface Props {\r\n    key?: any,\r\n    parents: string[],\r\n    values: DropDownOption[],\r\n    title: string,\r\n    name: string,\r\n    defaultValue?: string,\r\n    onChange?: any,\r\n}\r\n\r\n\r\nexport default function DropDownBox({ title, defaultValue, name, values, parents, onChange} : Props) {\r\n    var firstTitle = undefined;\r\n    if(values.length > 0){\r\n        //@ts-ignore\r\n        firstTitle = values[0].title || values[0];\r\n    }\r\n    let [value, setValue] = useUniversalState(name, parents,defaultValue || firstTitle || '')\r\n  \r\n    const menuItems = values.map((option: DropDownOption) => {\r\n        if(typeof option !== 'string')\r\n            return <MenuItem key={option.title} value={option.title}>{option.title}</MenuItem>\r\n        else \r\n            return <MenuItem key={option} value={option}>{option}</MenuItem>\r\n    });\r\n\r\n    return <FormControl style={{minWidth: 120}}>\r\n        <InputLabel id={name + \"-label\"}>{title}</InputLabel>\r\n        <Select\r\n            value={value}\r\n            onChange={(e:any)=>{\r\n                value = values.find((value)=>\r\n                    value===e.target.value ||\r\n                    //@ts-ignore\r\n                    (value.title === e.target.value))\r\n                setValue(e.target.value)\r\n                if(onChange)\r\n                    onChange(value.value || value)\r\n            }}\r\n        >\r\n            {menuItems}\r\n        </Select>\r\n    </FormControl>\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PoseCounter from './PoseCounter';\r\nimport WebCamPose from './WebCamPose';\r\nimport getModels from './getModels';\r\nimport DropDownBox, { DropDownOption } from './DropDown/DropDownBox';\r\nimport { loadFromLocal, clearRepnet, loadModel } from './predictPose';\r\nimport { async } from 'q';\r\nimport { Button } from '@material-ui/core';\r\nimport useUniversalState from './reducers/useUniversalState';\r\n\r\nexport default function CountReps() {\r\n    let myName = \"CountReps\";\r\n    let parents = [myName];\r\n\r\n    let [models, setModels] = useState<DropDownOption[]>([]);\r\n    let [_, setCount] = useUniversalState(\"PoseCounter\", []);\r\n\r\n    useEffect(() => {\r\n        getModels().then(models => {\r\n            var modelOptions = models.map(({ name, load }: any) => ({ title: name, value: { name, load } }))\r\n            setModels([\"No Model\", ...modelOptions])\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return <div style={{ width: '50%', maxHeight: \"30%\", maxWidth: \"60vh\", flex: 1 }}>\r\n        <PoseCounter />\r\n\r\n        <div style={{ width: '100%', display:'flex', flexDirection:'column', alignItems:'center'}}>\r\n            <div style={{ width: '100%', flex:1 }}>\r\n                <WebCamPose parents={parents} />\r\n            </div>\r\n        </div>\r\n        <DropDownBox name=\"model\" title=\"Model\" parents={parents} values={models}\r\n            onChange={async (value: any) => {\r\n                if (value?.load)\r\n                    loadModel(await value.load());\r\n                else\r\n                    clearRepnet();\r\n\r\n            }}\r\n        />\r\n        <Button variant=\"contained\" onClick={() => { setCount({ count: 0 }) }}>Clear</Button>\r\n    </div>\r\n}","\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport { Pose } from '@tensorflow-models/posenet';\r\n\r\n\r\nexport async function trainModelFromStorage(name: string, states: Array<Array<Pose>>, progress?: (info: tf.History)=>void){\r\n    const inputSize = states[0][0].keypoints.length * 2;\r\n    const outputSize = states.length;\r\n\r\n    try {\r\n        var model = await tf.loadLayersModel('localstorage://' + name);\r\n    } catch (e) {\r\n        model = tf.sequential({\r\n            layers: [\r\n                tf.layers.dense({ inputShape: [inputSize], units: inputSize * 2, activation: 'sigmoid' }),\r\n                tf.layers.dense({ units: outputSize * 2, activation: 'sigmoid' }),\r\n                tf.layers.dense({ units: outputSize, activation: 'sigmoid' }),\r\n            ]\r\n        });\r\n    }\r\n\r\n    await train(model, states, progress);\r\n\r\n    await model.save('localstorage://' + name);\r\n}\r\n\r\nexport default async function train(model: tf.LayersModel, states: Array<Array<Pose>>, progress?: (info : tf.History)=>void) {\r\n    if (!states[0])\r\n        return;\r\n    const inputSize = states[0][0].keypoints.length * 2;\r\n    const outputSize = states.length;\r\n\r\n\r\n\r\n\r\n    model.compile({\r\n        optimizer: tf.train.sgd(0.1),\r\n        loss: tf.losses.meanSquaredError,\r\n    });\r\n\r\n    // Generate dummy data.\r\n    const toData = (poses: Array<Pose>) => {\r\n        return poses.map((pose) => {\r\n            var positions = pose.keypoints.map(keypoint => {\r\n                return [keypoint.position.x / 600, keypoint.position.y / 600];\r\n            }).reduce((l, r) => r.concat(l));\r\n\r\n            return positions;\r\n        });\r\n    }\r\n\r\n    const toLabel = (label: number, num: number) => {\r\n        var labels = [];\r\n        for (var i = 0; i < num; i++) {\r\n            labels.push(label)\r\n        }\r\n        return labels;\r\n    }\r\n\r\n    const datas = states.map(data=>toData(data));\r\n    const labelss = states.map((label,index)=>toLabel(index, label.length));\r\n\r\n    const dataD = datas.reduce((a,b)=>a.concat(b));\r\n    const labelsD = labelss.reduce((a,b)=>a.concat(b));\r\n\r\n\r\n\r\n    const data = tf.tensor(dataD);\r\n    const labels = tf.oneHot(labelsD, outputSize);\r\n\r\n\r\n\r\n    for (let index = 0; index < 10; index++) {\r\n        // Train for 5 epochs with batch size of 32.\r\n        await model.fit(data, labels, {\r\n            epochs: 10,\r\n            batchSize: 16,\r\n        }).then(info => {\r\n            if(progress)\r\n                progress(info);\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport getModels, { getPublicModels } from './getModels';\r\nimport DropDownBox, { DropDownOption } from './DropDown/DropDownBox';\r\n\r\ninterface Props {\r\n    parents: any[],\r\n    onChange?: (value:any)=>void\r\n}\r\n\r\nexport default function ExistingModelDropDown({ parents, onChange }: Props) {\r\n    let [models, setModels] = useState<DropDownOption[]>([]);\r\n\r\n    useEffect(() => {\r\n        getModels().then(async models => {\r\n            var modelOptions = models.map(({name, load}:any)=>({title:name, value:{name, load}})) \r\n           \r\n            setModels([\"No Model\", ...modelOptions])\r\n        });\r\n    }, []);\r\n\r\n    return <DropDownBox name=\"model\" title=\"Model\" parents={parents} values={models}\r\n        onChange={(value: any) => {\r\n            if(onChange)\r\n                onChange(value)\r\n        }}\r\n    />\r\n}","import store from \"./store\";\r\n\r\n\r\n\r\n\r\nfunction getStateI( state:any, parents: string[]) : any{\r\n    var parent = parents.shift();\r\n    //if my parent is null\r\n    if(parent === undefined)\r\n        return state\r\n    \r\n    if(parent in state){\r\n        return getStateI(state[parent], [...parents]);\r\n    }\r\n    return undefined\r\n}\r\n\r\n\r\nexport default function getState(name:string, parents: string[]) : any{\r\n    return getStateI(store.getState().universalReducer, [...parents, name]);\r\n}\r\n","import React, { useState } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport { TextField, Button, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { trainModelFromStorage } from './trainRepRecognition';\r\nimport ExistingModelDropDown from './ExistingModelDrowDown';\r\nimport { XAxis, CartesianGrid, Line, LineChart, Tooltip, YAxis } from 'recharts'\r\nimport getState from \"./reducers/getState\"\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport default function TrainModel({ parents = [] }: Props) {\r\n    let myName = \"TrainModel\";\r\n    let oldParents = parents;\r\n\r\n    let [{ name, posess, existingModel, existingModelSelect, isTraining, keepTraining }, setState] = \r\n    useUniversalState<any>(myName, parents, {\r\n        posess: undefined,\r\n        name: '',\r\n        existingModel: false,\r\n        existingModelSelect: undefined,\r\n        isTraining: false,\r\n        keepTraining: true,\r\n\r\n    });\r\n\r\n    let [infos, setInfos] = useState<any[]>([]);\r\n\r\n    parents = [...parents, myName];\r\n\r\n    const trainProgress = (info: tf.History) => {\r\n        setInfos(prevInfos => ([...prevInfos, { loss: info.history.loss[0], time: prevInfos.length }]));\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        \r\n\r\n        if (!existingModel && name === '') {\r\n            alert(\"Please pick a name for this model\");\r\n            return;\r\n        }\r\n\r\n        if (existingModel && (!existingModelSelect || existingModelSelect.name === \"No Model\")) {\r\n            alert(\"Please pick an existing model\");\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        if (posess) {\r\n            if (!isTraining) {\r\n                if (existingModel) {\r\n                    if (existingModelSelect.fromLocal) {\r\n                        setState({ isTraining: true })\r\n                        trainModelFromStorage(existingModelSelect.name, posess, trainProgress);\r\n                       \r\n                    }\r\n                } else {\r\n                    setState({ isTraining: true });\r\n                    while(getState(myName, oldParents).keepTraining){\r\n                        await trainModelFromStorage(name, posess, trainProgress);\r\n                    }\r\n                    setState({keepTraining: true});\r\n                    setState({ isTraining: false });\r\n                   \r\n                }\r\n            }else{\r\n                setState({keepTraining: false});\r\n            }\r\n\r\n\r\n        }\r\n        else\r\n            alert(\"Please pick training data\")\r\n    }\r\n\r\n    const newName = <TextField label=\"Name\" style={{ background: undefined }} color='primary' variant=\"standard\" onChange={(e) => setState({ name: e.target.value })} />\r\n\r\n\r\n    const existingModelDropDown = <ExistingModelDropDown parents={parents} onChange={(e) => setState({ existingModelSelect: e })} />\r\n\r\n    return <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <FormControlLabel\r\n            control={<Checkbox name=\"existingModel\" value={existingModel} onChange={(e) => setState({ existingModel: e.target.checked })} />}\r\n            label=\"Existing Model\"\r\n        />\r\n        {existingModel ? existingModelDropDown : newName}\r\n        <input type='file' accept=\".json\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            if (e ?.target ?.files) {\r\n                if (e ?.target ?.files.length > 0) {\r\n                    var file = e ?.target ?.files[0];\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        if (event ?.target ?.result) {\r\n                            //@ts-ignore\r\n                            var posess = JSON.parse(event.target.result);\r\n\r\n                            setState({ posess })\r\n                        }\r\n\r\n                    };\r\n                    reader.readAsText(file);\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }} />\r\n        <Button variant='contained' onClick={onSubmit}>{isTraining?(keepTraining?\"Stop\":\"Stopping\"):\"Train\"}</Button>\r\n        <LineChart\r\n            width={400}\r\n            height={400}\r\n            data={infos}\r\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\r\n        >\r\n            <XAxis dataKey=\"time\" label=\"Time\" />\r\n            <YAxis dataKey=\"loss\" label=\"Loss\" />\r\n            <Tooltip />\r\n            <CartesianGrid stroke=\"#f5f5f5\" />\r\n            <Line type=\"monotone\" dataKey=\"loss\" stroke=\"#ff7300\" />\r\n        </LineChart>\r\n\r\n    </div>\r\n}","import React, { useState } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport useUniversalState from './reducers/useUniversalState';\r\nimport { TextField, Button, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { trainModelFromStorage } from './trainRepRecognition';\r\nimport ExistingModelDropDown from './ExistingModelDrowDown';\r\nimport { XAxis, CartesianGrid, Line, LineChart, Tooltip, YAxis } from 'recharts'\r\n//@ts-ignore\r\nimport Download from '@axetroy/react-download';\r\nimport getModels from './getModels';\r\n\r\n\r\ninterface Props {\r\n    parents?: any[]\r\n}\r\n\r\nexport default function DownloadLocalModels({ parents = [] }: Props) {\r\n\r\n    const download = async () => {\r\n        var models = await getModels();\r\n        Promise.all(models.map(async (model) => {\r\n            //localStorage.getItem(\"\")\r\n            var m = await tf.loadLayersModel('localstorage://' + model);\r\n            m.save('downloads://' + model);\r\n        }))\r\n\r\n    }\r\n    return <div>\r\n        <Button variant='outlined' onClick={download}>Download Data</Button>\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport CreateRep from './CreateRep';\nimport { Switch, Route, Redirect } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './Header';\nimport CountReps from './CountReps';\nimport TrainModel from './TrainModel';\nimport { ThemeProvider, createMuiTheme, Box, CssBaseline } from '@material-ui/core';\nimport DownloadLocalModels from './DownloadLocalModels';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n})\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter basename=\"/Spotter\">\n        <Switch>\n          <Route path=\"\">\n            <Header />\n            <Box my={4} className=\"App-header\" color=\"background\">\n              <Route path=\"/CreateRep\" exact>\n                <CreateRep />\n              </Route>\n              <Route path=\"/CountReps\" exact>\n                <CountReps />\n              </Route>\n              <Route path=\"/TrainModel\" exact>\n                <TrainModel />\n              </Route>\n              <Route path=\"/DownloadLocalModels\" exact>\n                <DownloadLocalModels />\n              </Route>\n              <Route path='*' exact={true}>\n                <Redirect to=\"/CountReps\" />\n              </Route>\n            </Box>\n          </Route>\n        </Switch>\n\n      </BrowserRouter>\n\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\n \nimport store from './reducers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}